#include <iostream>
#include <ctime> // we need to include these for proper RNG
#include <random>

using namespace std;

char MAIN_MENU_EXIT_KEY = 'e';

/*
These are function prototypes. 
They have to match the function further down the page,
but they help the compiler keep code ordered.
If you need to add a funtion, add a matching protype()
*/

void printMenu();
void generateStartingArea();
void generateDungeonRoom();
void generateDungeonDoor();
void generateDungeonPassage();
void generatePassagewidth();
void generateDoorContents();
int rollDice(int numberOfDice, int sizeOfDice);

void printMenu()
{
	cout << "Here's a menu with a bunch of cool options!" << endl;
}

/*
These functions will generate random components
 of a dungeon. (TODO: Random Attributes)
 */
void generateStartingArea()
{
	cout << "Here's the entrance of the dungeon!" << endl;
}


void generateDungeonRoom()
{
	cout << "Here's a room with random parameters!" << endl;
}

void generateDungeonDoor()
{
	cout << "Here's a door with some random features!" << endl;
}

void generateDungeonPassage()
{
	cout << "This is a random dungeon passage!" << endl;
}

void generatePassagewidth()
{
	cout << "This is a random passage width!" << endl;
}

void generateDoorContents()
{
	cout << "This is what's behind a door!" << endl;
}

int rollDice(int numberOfDice, int sizeOfDice)
{	
	int rollTotal = 0;
	default_random_engine randomEngine(time(0)); //crates the actual engine and seeds it with time.
	unfiorm_int_distribution<int> diceRoll(1, sizeOfDice); //establishes a range
	
	for (int i = 0; i < numberOfDice; i++)
	{
		rollTotal += diceRoll(randomEngine);//calls the range and random engine seeded with time
	}
	return rollTotal;
}

int main() 
{
	char input = 0;
	
	cout << "Welcome to Dungeon-ator!!!" << endl;
	cout << endl;
	do
	{
		printMenu();
		cout << "Enter your menu choice: ";
		cin >> input;
		switch(input)
		{
		}
	}while(input != MAIN_MENU_EXIT_KEY)

return 0;
}
